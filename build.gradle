plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "6.2.0.5505"
}

group = 'com.innowise.user_service'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	mockitoAgent {
		transitive = false
	}
}

repositories {
	mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/kruartSPQR/common")
        credentials {
            username = findProperty('gpr.user') ?: System.getenv('GITHUB_ACTOR')
            password = findProperty('gpr.token') ?: System.getenv('GITHUB_TOKEN')
        }
    }
}

dependencies {
    implementation 'com.innowise:common:0.0.1-SNAPSHOT'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.data:spring-data-rest-webmvc'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'org.mockito:mockito-core:5.18.0'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	mockitoAgent "org.mockito:mockito-core:5.18.0"
}

tasks.named('test') {
	useJUnitPlatform()
	doFirst {
		jvmArgs += ["-javaagent:${configurations.mockitoAgent.asPath}"]
		jvmArgs += '-Xshare:off'
	}
}

sonar {
	properties {
		property "sonar.projectKey", "kruartSPQR_UserService_CI_Pipline"
		property "sonar.projectName", "UserService_CI_Pipline"
		property "sonar.organization", "kruartspqr"
		property "sonar.token", System.getenv("SONAR_TOKEN")
		property "sonar.host.url", System.getenv("SONAR_HOST_URL")
	}
}